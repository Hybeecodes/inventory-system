{"version":3,"sources":["webpack:///./src/app/layout/equipments/equipments-routing.module.ts","webpack:///./src/app/layout/equipments/equipments.component.html","webpack:///./src/app/layout/equipments/equipments.component.scss","webpack:///./src/app/layout/equipments/equipments.component.ts","webpack:///./src/app/layout/equipments/equipments.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACM;AAE7D,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAmB;KACjC;CACJ,CAAC;AAMF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAJnC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACfpC,sjCAAsjC,2EAA2E,KAAK,iDAAiD,WAAW,iDAAiD,sBAAsB,iDAAiD,gBAAgB,mJAAmJ,odAAod,UAAU,6rB;;;;;;;;;;;ACA37D,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACS;AACe;AACjC;AACX;AAU9B;IAGI,6BACW,GAAmB,EACnB,MAAc;QADd,QAAG,GAAH,GAAG,CAAgB;QACnB,WAAM,GAAN,MAAM,CAAQ;QAJzB,eAAU,GAAG,EAAE,CAAC;QAChB,eAAU,GAAG,EAAE,CAAC;IAIb,CAAC;IAEJ,sCAAQ,GAAR;QAAA,iBASC;QAPG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACrC,EAAE,EAAC,GAAG,CAAC,QAAQ,CAAC,IAAG,CAAC,CAAC,EAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;YACrC,CAAC;QACL,CAAC,CAAC;IAEN,CAAC;IACD,yCAAW,GAAX,UAAY,CAAC,EAAC,IAAI;QACd,iDAAI,CAAC,mCACiB,IAAI,CAAC,IAAI,qCACV,IAAI,CAAC,WAAW,CAAC,IAAI,eACzC,CAAC,CAAC;IACP,CAAC;IACD,wCAAU,GAAV,UAAW,CAAC,EAAC,IAAI;QACb,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAe,WAAa,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACpD,EAAE,EAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAC;gBACnB,iDAAI,CAAC,QAAQ,EAAC,oCAAoC,EAAC,SAAS,CAAC,CAAC,IAAI,CAAC;oBAC/D,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC1B,CAAC,CAAC;YACN,CAAC;QACL,CAAC,CAAC;IACN,CAAC;IAjCQ,mBAAmB;QAP/B,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;;;YAG/B,UAAU,EAAC,CAAC,2EAAgB,EAAE,CAAC;YAC/B,SAAS,EAAC,CAAC,kFAAe,CAAC;SAC9B,CAAC;yCAKiB,kFAAe;YACX,sDAAM;OALhB,mBAAmB,CAkC/B;IAAD,0BAAC;CAAA;AAlC+B;;;;;;;;;;;;;;;;;;;;;;;;;ACdS;AACM;AAEuB;AACT;AAM7D;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,kFAAuB,CAAC;YAChD,YAAY,EAAE,CAAC,yEAAmB,CAAC;SACtC,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH","file":"equipments-equipments-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EquipmentsComponent } from './equipments.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EquipmentsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EquipmentsRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n    <!-- <app-page-header [heading]=\\\"'Tables'\\\" [icon]=\\\"'fa-table'\\\"></app-page-header> -->\\n    <div class=\\\"row\\\">\\n        <h1>Equipments</h1>\\n            <div class=\\\"col col-xl-12 col-lg-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Equipments\\n                        </div>\\n                        <div class=\\\"card-body table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead>\\n                                <tr>\\n                                    <th>#</th>\\n                                    <th>Equipment Name</th>\\n                                    <th>Type</th>\\n                                    <th>Condition</th>\\n                                    <th>Status</th>\\n                                </tr>\\n                                </thead>\\n                                <tbody>\\n                                <tr *ngFor=\\\"let type of equipments; let i= index\\\" >\\n                                    <th scope=\\\"row\\\">{{i+1}}</th>\\n                                    <td>{{type.name}}</td>\\n                                    <td>{{type.typeId.typeName}}</td>\\n                                    <td>{{type.condition}}</td>\\n                                      <td>\\n                                        <span *ngIf=\\\"type.isAllocated\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"showDetails($event,type)\\\" class=\\\"badge badge-success\\\">Allocated</span>\\n                                      </td>\\n                                      <td>\\n                                        <span *ngIf=\\\"!type.isAllocated\\\" class=\\\"badge badge-danger\\\">Not Allocated</span>\\n                                      </td>\\n                                    <td> \\n                                        <a routerLink=\\\"/allocate_equipment/{{type._id}}\\\" *ngIf=\\\"!type.isAllocated\\\" class=\\\"btn btn-danger\\\">Allocate</a>    \\n                                    </td>\\n                                    <td> \\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"type.isAllocated\\\" (click)=\\\"deallocate($event,type)\\\" >Deallocate</button>   \\n                                    </td>\\n                                    \\n                                </tr>\\n                                \\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { ApiAgentService } from '../../shared/services/api-agent.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert';\n\n\n@Component({\n    selector: 'app-equipment-types',\n    templateUrl: './equipments.component.html',\n    styleUrls: ['./equipments.component.scss'],\n    animations:[routerTransition()],\n    providers:[ApiAgentService]\n})\nexport class EquipmentsComponent implements OnInit {\n    equipments = [];\n    equipCount = [];\n    constructor(\n        public api:ApiAgentService,\n        public router: Router\n    ) {}\n\n    ngOnInit(\n    ) {\n        this.api.getData('/equipments').then((res)=>{\n            if(res['status'] ==1){\n                console.log(res);\n                this.equipments = res['message'];\n            }\n        })\n       \n    }\n    showDetails(e,item){\n        swal(`\n            Equipment Name: ${item.name}\n            Allocated To : ${item.allocatedTo.name}\n        `);\n    }\n    deallocate(e,item){\n        const equipmentId = item._id;\n        this.api.getData(`/deallocate/${equipmentId}`).then((res)=>{\n            if(res['status'] == 1){\n                swal('Great!','Equipment Deallocated Successfully','success').then(()=>{\n                    location.reload(true);\n                })\n            }\n        })\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EquipmentsRoutingModule } from './equipments-routing.module';\nimport { EquipmentsComponent } from './equipments.component';\n\n@NgModule({\n    imports: [CommonModule, EquipmentsRoutingModule],\n    declarations: [EquipmentsComponent]\n})\nexport class EquipmentsModule {}\n"],"sourceRoot":""}